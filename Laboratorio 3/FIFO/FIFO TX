module FIFO(
  wire clk;
  wire clk_16MHz;
  wire [8:0]data_count_0;
  wire [7:0]data_in;
  wire [7:0]data_out;
  wire empty;
  wire full;
  wire locked;
  wire rd_en;
  wire rst;
  wire wr_en;
);

    // Señales del Clock Wizard
    logic reloj_16MHz;
    logic pll_bloqueado;
    
    // ==================== CLOCK WIZARD INSTANCIADO ====================
    clk_wiz_0 tu_clock_wizard (
        .clk_out1(reloj_16MHz),    // Reloj de salida 16 MHz
        .reset(reset),             // Reset
        .locked(pll_bloqueado),    // Señal de bloqueo
        .clk_in1(reloj_100MHz)     // Reloj de entrada 100 MHz
    );
    
    // ==================== RESET CONDICIONAL PARA FIFO ====================
    // Solo resetear el FIFO cuando el PLL esté bloqueado
    logic reset_fifo;
    assign reset_fifo = reset | ~pll_bloqueado;
    
    // ==================== INSTANCIA FIFO 512 ====================
    fifo_generator_0 fifo_512_inst (
       (.clk(clk_16MHz),
        .data_count(data_count_0),
        .din(data_in),
        .dout(data_out),
        .empty(empty),
        .full(full),
        .rd_en(rd_en),
        .srst(rst),
        .wr_en(wr_en));
endmodule
